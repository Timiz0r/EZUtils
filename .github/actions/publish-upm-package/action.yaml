# note: not tested after refactor, since doing away with it
name: Publish UPM package
description: Publishes a new UPM package if it doesn't already exist in the registry
inputs:
  package-path:
    required: true
outputs:
  package-name:
    description: "Package name"
    value: ${{ steps.package-info.outputs.name }}
  package-version:
    description: "Package version"
    value: ${{ steps.package-info.outputs.version }}
runs:
  using: composite
  steps:
    - uses: actions/setup-node@v3
      with:
          node-version: 18
    - name: Setup npmrc
      run: |
          cat <<EOF > ~/.npmrc
          //pkgs.dev.azure.com/timiz0r/EZUtils/_packaging/EZUtils/npm/registry/:username=timiz0r
          //pkgs.dev.azure.com/timiz0r/EZUtils/_packaging/EZUtils/npm/registry/:_password=\${AZURE_ARTIFACTS_PAT}
          //pkgs.dev.azure.com/timiz0r/EZUtils/_packaging/EZUtils/npm/registry/:email=foo@foo.foo
          registry=https://pkgs.dev.azure.com/timiz0r/EZUtils/_packaging/EZUtils/npm/registry/
          always-auth=true
          EOF
    - uses: ./.github/actions/get-package-info
      id: package-info
      with:
        package-path: ${{ inputs.package-path }}
    - name: Publish package
      if: "!fromJson(steps.package-info.outputs.version-exists)"
      working-directory: ${{ inputs.package-path }}
      shell: bash
      run: npm publish --loglevel=silly
      env:
        AZURE_ARTIFACTS_PAT: ${{secrets.AZURE_ARTIFACTS_PAT}}
    - uses: softprops/action-gh-release@v1
      if: "!fromJson(steps.package-info.outputs.version-exists)"
      with:
        tag_name: ${{ steps.package-info.outputs.name }}-${{ steps.package-info.outputs.version }}
        prerelease: ${{ contains(steps.package-info.outputs.version, 'preview') }}
    - shell: bash
      if: success() && !fromJson(steps.package-info.outputs.version-exists)
      run: echo "### Successfully uploaded package" >> $GITHUB_STEP_SUMMARY
    - shell: bash
      if: success() && fromJson(steps.package-info.outputs.version-exists)
      run: echo "### Package upload not required" >> $GITHUB_STEP_SUMMARY
    - shell: bash
      if: failure()
      run: echo "### Failed to uploaded package" >> $GITHUB_STEP_SUMMARY
    - if: always()
      shell: bash
      run: |
        echo "* Package name: ${{ steps.package-info.outputs.name }}" >> $GITHUB_STEP_SUMMARY
        echo "* Package version: ${{ steps.package-info.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "* Package versions before upload: ${{ steps.package-info.outputs.published-versions }}" >> $GITHUB_STEP_SUMMARY
        echo "* Version already exists: ${{ steps.package-info.outputs.version-exists }}" >> $GITHUB_STEP_SUMMARY
